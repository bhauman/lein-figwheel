:BuildOptionsMap

A Map of options that specifies a ClojureScript 'build'

  :BuildOptionsMap [:CreateExampleMap :id :source-paths :figwheel :compiler]

:id

A Keyword, String or Symbol that identifies this build.

  :id "dev"

:source-paths

A vector of paths to your cljs source files. These paths should be
relative from the root of the project to the root the namespace.
For example, if you have an src/example/core.cljs file that contains a
example.core namespace, the source path to this file is "src"

  :source-paths ["src"]

:notify-command

If a :notify-command is specified, it will be called when compilation
succeeds or fails, and a textual description of what happened will be
appended as the last argument to the command. If a more complex
command needs to be constructed, the recommendation is to write a
small shell script wrapper.
Default: nil (disabled)

  :notify-command ["growlnotify" "-m"]

:initial-notify-command

This option works like :notify-command, but specifies a command to be called
after initial compilation. :notify-command is called only for compilations
triggered in reaction to file changes.
Default: nil (disabled)

  :initial-notify-command ["growlnotify" "-m"]
