:FigwheelClientOptions

Either the Boolean value true or a Map of options to be passed to the
figwheel client. Supplying a true value or a map indicates that you
want the figwheel client code to be injected into the build.

  :FigwheelClientOptions [:CreateExampleMap :on-jsload]

:websocket-host

A String specifying the host part of the Figwheel websocket URL. If you have
JavaScript clients that need to access Figwheel that are not local, you can
supply the IP address of your machine here, or you can specify one of the
following keywords to have figwheel determine the string for you.
  :js-client-host  -- will use js/window.location.host
  :server-ip       -- will use local IP address of figwheel server
  :server-hostname -- will do a local hostname lookup on figwheel server
Default: "localhost"

  :websocket-host :server-ip

:on-jsload

A String or Symbol representing a client side ClojureScript function
to be invoked after new code has been loaded.
Default: Off

  :on-jsload "example.core/fig-reload"

:before-jsload

A String or Symbol representing a client side ClojureScript function
to be invoked before new code has been loaded.
Default: Off

  :before-jsload "example.core/fig-teardown"

:heads-up-display

Show a notification in the browser on each refresh.
Default: true

  :heads-up-display false

:load-warninged-code

If there are warnings in your code emitted from the compiler, figwheel
does not refresh. If you would like Figwheel to load code even if
there are warnings generated set this to true.
Default: false

  :load-warninged-code true

:notify-command

If a :notify-command is specified, it will be called when compilation
succeeds or fails, and a textual description of what happened will be
appended as the last argument to the command. If a more complex
command needs to be constructed, the recommendation is to write a
small shell script wrapper.
Default: nil (disabled)

  :notify-command ["growlnotify" "-m"]

:open-urls

A Vector of URLs that you would like to have opened at the end of the
initial compile. These URLs must be Strings.

This is great for opening the host page for the target build and other
helpful websites like http://cljs.info

These urls will be opened with clojure.java.browse/browse-url.
Default: nil (disabled)

  :open-urls ["http://localhost:3449/index.html"]
